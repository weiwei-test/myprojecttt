{"remainingRequest":"C:\\Users\\Administrator\\Downloads\\myprojectt-master\\vueDataV-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Downloads\\myprojectt-master\\vueDataV-master\\src\\components\\colorfulArea\\index.vue?vue&type=style&index=0&id=5401268c&lang=scss&scoped=true","dependencies":[{"path":"C:\\Users\\Administrator\\Downloads\\myprojectt-master\\vueDataV-master\\src\\components\\colorfulArea\\index.vue","mtime":1714314763000},{"path":"C:\\Users\\Administrator\\Downloads\\myprojectt-master\\vueDataV-master\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Downloads\\myprojectt-master\\vueDataV-master\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Downloads\\myprojectt-master\\vueDataV-master\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Downloads\\myprojectt-master\\vueDataV-master\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Downloads\\myprojectt-master\\vueDataV-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Downloads\\myprojectt-master\\vueDataV-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5zbi1jb250YWluZXIgewogIGxlZnQ6IDEzMDZweDsKICB0b3A6IDI0MDhweDsKICB3aWR0aDogNTYwcHg7CiAgaGVpZ2h0OiA0MDBweDsKICAuY2hhcnRzZG9tIHsKICAgIHdpZHRoOiAxMDAlOwogICAgaGVpZ2h0OiAxMDAlOwogIH0KfQoKCg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AAuQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/colorfulArea","sourcesContent":["<!--\n 描述: 多彩轮播面积\n 作者: Jack Chen\n 日期: 2020-05-03\n-->\n\n<template>\n  <div class=\"wrap-container sn-container\"> \n    <div class=\"sn-content\"> \n      <div class=\"sn-title\">多彩轮播面积</div> \n      <div class=\"sn-body\"> \n        <div class=\"wrap-container\"> \n          <div class=\"chartsdom\" id=\"chart_cra\"></div>\n        </div> \n      </div> \n    </div>   \n  </div>\n</template>\n\n<script>\n\nexport default {\n  name: \"colorfulArea\",\n  data() {\n    return {\n      option: null,\n      dataMap: {}\n    }\n  },\n  mounted() {\n    this.getEchart();\n  },\n  methods: {\n    dataFormatter(obj) {\n      let pList = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24];\n      let temp;\n      for (let x = 1; x <= 5; x++) {\n          let max = 0;\n          let sum = 0;\n          temp = obj[x];\n          for (let i = 0, l = temp.length; i < l; i++) {\n              max = Math.max(max, temp[i]);\n              sum += temp[i];\n              obj[x][i] = {\n                name: pList[i],\n                value: temp[i]\n              };\n          }\n          obj[x + 'max'] = Math.floor(max / 100) * 100;\n          obj[x + 'sum'] = sum;\n      }\n      return obj;\n    },\n    getEchart() {\n      let myChart = echarts.init(document.getElementById('chart_cra'));\n      let itemStyle = {\n        barBorderRadius: [15, 0],\n        color: '#0084ff'\n      }\n\n      this.dataMap.dataType = this.dataFormatter({\n        5:[96,96,96,96,96,96,96,96,96,96,96,96,85,85,85,85,85,85,98,54,50,54,54,54,54],\n        4:[86,86,86,86,86,86,86,86,86,86,86,86,85,95,85,85,85,85,64,64,60,64,64,64,64],\n        3:[90,90,90,90,90,90,90,90,90,90,95,90,91,91,91,91,91,91,54,54,50,54,54,54,54],\n        2:[76,76,76,76,76,76,76,76,76,76,76,76,95,95,95,95,95,95,54,54,50,54,54,54,54],\n        1:[66,66,66,66,66,66,66,66,66,96,66,66,85,85,85,85,85,85,55,55,50,55,55,55,55],\n      });\n\n      this.option = {\n        baseOption: {\n          timeline: {\n            axisType: 'category',\n            autoPlay: true,\n            playInterval: 1000,\n            data: ['5.1', '5.2', '5.3', '5.4', '5.5'],\n            left: 50,\n            right: 50,\n            top: 5,\n            lineStyle: {\n              color: '#122e96'\n            },\n            label: {\n              color: '#fff'\n            },\n            checkpointStyle: {\n              color: '#ef8c2f',\n              symbolSize: 10,\n              borderColor: 'rgba(239, 140, 47, 0.5)',\n              borderWidth: 5,\n            },\n            controlStyle: {\n              showPlayBtn: false,\n              borderColor: '#122e96',\n              itemGap: 20\n            }, \n            itemStyle: {\n              borderColor: '#122e96',\n              borderWidth: 5,\n              // shadowColor: 'rgba(239, 140, 47, 0.5)',\n              // shadowBlur: 5\n            },\n            emphasis: {\n              label: {\n                color: '#ef8c2f',\n                show: false\n              },\n              checkpointStyle: {\n                color: '#ef8c2f',\n                borderColor: 'rgba(239, 140, 47, 0.5)',\n                borderWidth: 5,\n              },\n              controlStyle: {\n                borderColor: '#122e96'\n              }, \n              itemStyle: {\n                color: '#ef8c2f',\n                borderColor: 'rgba(239, 140, 47, 0.5)',\n                borderWidth: 5\n              } \n            }\n          },\n          calculable: true,\n          grid: {\n            top: '25%',\n            bottom: '12%'\n          },\n          xAxis: [{\n            type: 'category',\n            axisLabel: {\n              interval: 5\n            },\n            data: [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24],\n            splitLine: { \n              show: false \n            },\n            offset: 10,\n            axisTick: {\n              show: true,\n              alignWithLabel: true,\n              interval: 5,\n              length: 10,\n              lineStyle: {\n                color: '#59aec8',\n                width: 3\n              }\n            }, \n            axisLine: {\n              show: false,\n              lineStyle: {\n                color: '#2867a8',\n              }\n            },\n          }],\n          yAxis: [{\n            type: 'value',\n            splitLine: {\n              show: false\n            },\n            axisTick: {\n              show: false\n            }, \n            axisLine: {\n              show: false,\n              lineStyle: {\n                color: '#2867a8'\n              }\n            }\n          }],\n          series: [{\n            name: '多彩轮播面积', \n            type: 'line',\n            markPoint: {\n              symbol: 'pin',\n              symbolSize: 40,\n              itemStyle: {\n                normal: {\n                  color: '#ef8c2f',\n                  shadowColor: '#ef8c2f',\n                  shadowBlur: 15\n                }\n              },\n              data: [\n                {type: 'max', name: '最大值'}\n              ]\n            },\n            itemStyle: {\n              borderColor: '#1374e7',\n              borderWidth: 10,\n              shadowBlur: 10,\n              shadowColor: '#1374e7', \n              opacity: 0,\n            },\n            label: {\n              show: false,\n              // position: 'top',\n              // color: '#fff'\n            },\n            lineStyle: {\n              width: 2,\n              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                offset: 0,\n                color: '#17418d'\n              },{\n                offset: 1,\n                color: '#a56d42'\n              }]),\n            },\n            areaStyle: {\n              normal: {\n                color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                  offset: 0,\n                  color: '#1e4b4b'\n                },{\n                  offset: 1,\n                  color: 'rgba(0, 0, 0, 0)'\n                }]),\n              }\n            },\n            smooth: true,\n          }]\n        },\n        options: [{\n          series: [{\n            data: this.dataMap.dataType['1'],\n            itemStyle: itemStyle\n          }]\n        },{\n          series: [{\n            data: this.dataMap.dataType['2'],\n            itemStyle: itemStyle\n          }]\n        },{\n          series: [{\n            data: this.dataMap.dataType['3'],\n            itemStyle: itemStyle\n          }]\n        },{\n          series: [{\n            data: this.dataMap.dataType['4'],\n            itemStyle: itemStyle\n          }]\n        },{\n          series: [{\n            data: this.dataMap.dataType['5'],\n            itemStyle: itemStyle\n          }]\n        }]\n      }\n\n      myChart.setOption(this.option, true);\n\n      window.addEventListener('resize', () => {\n        myChart.resize();\n      });\n    }\n  },\n  beforeDestroy() {\n    \n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.sn-container {\n  left: 1306px;\n  top: 2408px;\n  width: 560px;\n  height: 400px;\n  .chartsdom {\n    width: 100%;\n    height: 100%;\n  }\n}\n\n\n</style>\n"]}]}