{"remainingRequest":"C:\\Users\\Administrator\\Downloads\\myprojectt-master\\vueDataV-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Downloads\\myprojectt-master\\vueDataV-master\\src\\components\\gauge\\index.vue?vue&type=style&index=0&id=6bede85c&lang=scss&scoped=true","dependencies":[{"path":"C:\\Users\\Administrator\\Downloads\\myprojectt-master\\vueDataV-master\\src\\components\\gauge\\index.vue","mtime":1714314763000},{"path":"C:\\Users\\Administrator\\Downloads\\myprojectt-master\\vueDataV-master\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Downloads\\myprojectt-master\\vueDataV-master\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Downloads\\myprojectt-master\\vueDataV-master\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Downloads\\myprojectt-master\\vueDataV-master\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Downloads\\myprojectt-master\\vueDataV-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Downloads\\myprojectt-master\\vueDataV-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5zbi1jb250YWluZXIgewogIGxlZnQ6IDUxMnB4OwogIHRvcDogMjgzOHB4OwogIHdpZHRoOiA0MzJweDsKICBoZWlnaHQ6IDQwMHB4OwogIC5jaGFydHNkb20gewogICAgd2lkdGg6IDEwMCU7CiAgICBoZWlnaHQ6IDEwMCU7CiAgfQp9Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AAkIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/gauge","sourcesContent":["<!--\n 描述: 仪表盘\n 作者: Jack Chen\n 日期: 2020-05-03\n-->\n\n<template>\n  <div class=\"wrap-container sn-container\"> \n    <div class=\"sn-content\"> \n      <div class=\"sn-title\">仪表盘</div> \n      <div class=\"sn-body\"> \n        <div class=\"wrap-container\"> \n          <div class=\"chartsdom\" id=\"chart_gauge\"></div> \n        </div> \n      </div> \n    </div>   \n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"gauge\",\n  data() {\n    return {\n      option: null,\n      timer: null\n    }\n  },\n  mounted() {\n    this.getEchart();\n  },\n  methods: {\n    getEchart() {\n      let myChart = echarts.init(document.getElementById('chart_gauge'));\n      this.option = {\n        tooltip: {\n          formatter: '{a} <br/>{c} {b}'\n        },\n         series: [{\n            name: '速度',\n            type: 'gauge',\n            min: 0,\n            max: 220,\n            splitNumber: 11,\n            // radius: '50%',\n            axisLine: {            // 坐标轴线\n              lineStyle: {       // 属性lineStyle控制线条样式\n                color: [[0.09, 'lime'], [0.82, '#1e90ff'], [1, '#ff4500']],\n                width: 3,\n                shadowColor: '#fff', //默认透明\n                shadowBlur: 10\n              }\n            },\n            axisLabel: {            // 坐标轴小标记\n              fontWeight: 'bolder',\n              color: '#fff',\n              shadowColor: '#fff', //默认透明\n              shadowBlur: 10\n            },\n            axisTick: {            // 坐标轴小标记\n                length: 15,        // 属性length控制线长\n                lineStyle: {       // 属性lineStyle控制线条样式\n                  color: 'auto',\n                  shadowColor: '#fff', //默认透明\n                  shadowBlur: 10\n                }\n            },\n            splitLine: {           // 分隔线\n              length: 25,         // 属性length控制线长\n              lineStyle: {       // 属性lineStyle（详见lineStyle）控制线条样式\n                width: 3,\n                color: '#fff',\n                shadowColor: '#fff', //默认透明\n                shadowBlur: 10\n              }\n            },\n            pointer: {           // 分隔线\n              shadowColor: '#fff', //默认透明\n              shadowBlur: 5\n            },\n            title: {\n              textStyle: {       // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n                fontWeight: 'bolder',\n                fontSize: 20,\n                fontStyle: 'italic',\n                color: '#fff',\n                shadowColor: '#fff', //默认透明\n                shadowBlur: 10\n              }\n            },\n            detail: {\n              // backgroundColor: 'rgba(30,144,255,0.8)',\n              // borderWidth: 1,\n              // borderColor: '#fff',\n              // shadowColor: '#fff', //默认透明\n              // shadowBlur: 5,\n              offsetCenter: [0, '50%'],       // x, y，单位px\n              textStyle: {       // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n                fontWeight: 'bolder',\n                fontSize: 25,\n                color: '#fff'\n              }\n            },\n            data: [{\n              value: 40, \n              name: 'km/h'\n            }]\n        }]\n      }\n\n\n      myChart.setOption(this.option, true);\n\n      window.addEventListener('resize', () => {\n        myChart.resize();\n      });\n\n      this.timer = setInterval(() => {\n        this.option.series[0].data[0].value = (Math.random()*100).toFixed(2) - 0;\n        myChart.setOption(this.option, true);\n      },2000);\n    }\n  },\n  beforeDestroy() {\n    clearInterval(this.timer);\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.sn-container {\n  left: 512px;\n  top: 2838px;\n  width: 432px;\n  height: 400px;\n  .chartsdom {\n    width: 100%;\n    height: 100%;\n  }\n}\n</style>\n"]}]}